
tf–idf

Toggle the table of contents



 23

languages

Article

Talk

Tools

Variants of term frequency (tf) weight

weighting scheme

tf weight

binary

raw count

term frequency

log normalization

double normalization 0.5

double normalization K

Variants of inverse document frequency (idf) weight

weighting scheme

idf weight (

)

unary

1

inverse document frequency

inverse document frequency smooth

inverse document frequency max

probabilistic inverse document frequency



Plot of different inverse document

frequency functions: standard, smooth,

probabilistic.

From Wikipedia, the free encyclopedia

In information retrieval, tf–idf (also TF*IDF, TFIDF, TF–IDF, or Tf–idf), short for term frequency–inverse document frequency, is a numerical statistic that is intended to reflect how important a word is to a document

in a collection or corpus.[1] It is often used as a weighting factor in searches of information retrieval, text mining, and user modeling. The tf–idf value increases proportionally to the number of times a word appears in the

document and is offset by the number of documents in the corpus that contain the word, which helps to adjust for the fact that some words appear more frequently in general. tf–idf has been one of the most popular term-

weighting schemes. A survey conducted in 2015 showed that 83% of text-based recommender systems in digital libraries use tf–idf.[2]

Variations of the tf–idf weighting scheme are often used by search engines as a central tool in scoring and ranking a document's relevance given a user query. tf–idf can be successfully used for stop-words filtering in

various subject fields, including text summarization and classification.

One of the simplest ranking functions is computed by summing the tf–idf for each query term; many more sophisticated ranking functions are variants of this simple model.

Motivations [edit]

Term frequency [edit]

Suppose we have a set of English text documents and wish to rank them by which document is more relevant to the query, "the brown cow". A simple way to start out is by eliminating documents that do not contain all three

words "the", "brown", and "cow", but this still leaves many documents. To further distinguish them, we might count the number of times each term occurs in each document; the number of times a term occurs in a document

is called its term frequency. However, in the case where the length of documents varies greatly, adjustments are often made (see definition below). The first form of term weighting is due to Hans Peter Luhn (1957) which

may be summarized as:[3]

The weight of a term that occurs in a document is simply proportional to the term frequency.

Inverse document frequency [edit]

Because the term "the" is so common, term frequency will tend to incorrectly emphasize documents which happen to use the word "the" more frequently, without giving enough weight to the more meaningful terms "brown"

and "cow". The term "the" is not a good keyword to distinguish relevant and non-relevant documents and terms, unlike the less-common words "brown" and "cow". Hence, an inverse document frequency factor is

incorporated which diminishes the weight of terms that occur very frequently in the document set and increases the weight of terms that occur rarely.

Karen Spärck Jones (1972) conceived a statistical interpretation of term-specificity called Inverse Document Frequency (idf), which became a cornerstone of term weighting:[4]

The specificity of a term can be quantified as an inverse function of the number of documents in which it occurs.

For example, the df and idf for some words in Shakespeare's 37 plays are as follows:[5]

Word

df

idf

Romeo

1

1.57

salad

2

1.27

Falstaff 4

0.967

forest

12 0.489

battle

21 0.246

wit

34 0.037

fool

36 0.012

good

37 0

sweet

37 0

We see that "Romeo", "Falstaff", and "salad" appears in very few plays, so seeing these words, one could be quite certain which play it is. In contrast, "good" and "sweet" appears in every play and are completely

uninformative as to which play it is.

Definition [edit]

1. The tf–idf is the product of two statistics, term frequency and inverse document frequency. There are various ways for determining the exact values of both statistics.

2. A formula that aims to define the importance of a keyword or phrase within a document or a web page.

Term frequency [edit]

Term frequency, tf(t,d), is the relative frequency of term t within document d,

,

where ft,d is the raw count of a term in a document, i.e., the number of times that term t occurs in document d. Note the denominator is simply the total number of terms in

document d (counting each occurrence of the same term separately). There are various other ways to define term frequency:[6]: 128 

the raw count itself: tf(t,d) = ft,d

Boolean "frequencies": tf(t,d) = 1 if t occurs in d and 0 otherwise;

logarithmically scaled frequency: tf(t,d) = log (1 + ft,d);[7]

augmented frequency, to prevent a bias towards longer documents, e.g. raw frequency divided by the raw frequency of the most frequently occurring term in the

document:

Inverse document frequency [edit]

The inverse document frequency is a measure of how much information the word provides, i.e., if it is common or rare across all documents. It

is the logarithmically scaled inverse fraction of the documents that contain the word (obtained by dividing the total number of documents by the

number of documents containing the term, and then taking the logarithm of that quotient):

with

: total number of documents in the corpus 

 : number of documents where the term  appears (i.e., 

). If the term is not in the corpus, this will lead to a division-by-zero. It

is therefore common to adjust the denominator to 

.








Variants of term frequency-inverse

document frequency (tf–idf) weights

weighting scheme

tf-idf

count-idf

double normalization-idf

log normalization-idf

Document 2

Term

Term Count

this

1

is

1

another

2

example 3

Document 1

Term

Term Count

this

1

is

1

a

2

sample 1

Term frequency–inverse document frequency [edit]

Then tf–idf is calculated as

A high weight in tf–idf is reached by a high term frequency (in the given document) and a low document frequency of the term in the whole collection of documents; the

weights hence tend to filter out common terms. Since the ratio inside the idf's log function is always greater than or equal to 1, the value of idf (and tf–idf) is greater than or

equal to 0. As a term appears in more documents, the ratio inside the logarithm approaches 1, bringing the idf and tf–idf closer to 0.

Justification of idf

[edit]

Idf was introduced as "term specificity" by Karen Spärck Jones in a 1972 paper. Although it has worked well as a heuristic, its theoretical foundations have been troublesome for at least three decades afterward, with many

researchers trying to find information theoretic justifications for it.[8]

Spärck Jones's own explanation did not propose much theory, aside from a connection to Zipf's law.[8] Attempts have been made to put idf on a probabilistic footing,[9] by estimating the probability that a given document d

contains a term t as the relative document frequency,

so that we can define idf as

Namely, the inverse document frequency is the logarithm of "inverse" relative document frequency.

This probabilistic interpretation in turn takes the same form as that of self-information. However, applying such information-theoretic notions to problems in information retrieval leads to problems when trying to define the

appropriate event spaces for the required probability distributions: not only documents need to be taken into account, but also queries and terms.[8]

Link with information theory [edit]

Both term frequency and inverse document frequency can be formulated in terms of information theory; it helps to understand why their product has a meaning in terms of joint informational content of a document. A

characteristic assumption about the distribution 

 is that:

This assumption and its implications, according to Aizawa: "represent the heuristic that tf–idf employs."[10]

The conditional entropy of a "randomly chosen" document in the corpus , conditional to the fact it contains a specific term  (and assuming that all documents have equal probability to be chosen) is:

In terms of notation,  and  are "random variables" corresponding to respectively draw a document or a term. The mutual information can be expressed as

The last step is to expand , the unconditional probability to draw a term, with respect to the (random) choice of a document, to obtain:

This expression shows that summing the Tf–idf of all possible terms and documents recovers the mutual information between documents and term taking into account all the specificities of their joint distribution.[10] Each

Tf–idf hence carries the "bit of information" attached to a term x document pair.

Example of tf–idf

[edit]

Suppose that we have term count tables of a corpus consisting of only two documents, as listed on the right.

The calculation of tf–idf for the term "this" is performed as follows:

In its raw frequency form, tf is just the frequency of the "this" for each document. In each document, the word "this" appears once; but as the document 2 has more

words, its relative frequency is smaller.

An idf is constant per corpus, and accounts for the ratio of documents that include the word "this". In this case, we have a corpus of two documents and all of them

include the word "this".

So tf–idf is zero for the word "this", which implies that the word is not very informative as it appears in all documents.

The word "example" is more interesting - it occurs three times, but only in the second document:

Finally,

(using the base 10 logarithm).

Beyond terms [edit]

The idea behind tf–idf also applies to entities other than terms. In 1998, the concept of idf was applied to citations.[11] The authors argued that "if a very uncommon citation is shared by two documents, this should be

weighted more highly than a citation made by a large number of documents". In addition, tf–idf was applied to "visual words" with the purpose of conducting object matching in videos,[12] and entire sentences.[13] However,

the concept of tf–idf did not prove to be more effective in all cases than a plain tf scheme (without idf). When tf–idf was applied to citations, researchers could find no improvement over a simple citation-count weight that

had no idf component.[14]

Derivatives [edit]

A number of term-weighting schemes have derived from tf–idf. One of them is TF–PDF (term frequency * proportional document frequency).[15] TF–PDF was introduced in 2001 in the context of identifying emerging topics

in the media. The PDF component measures the difference of how often a term occurs in different domains. Another derivate is TF–IDuF. In TF–IDuF,[16] idf is not calculated based on the document corpus that is to be

searched or recommended. Instead, idf is calculated on users' personal document collections. The authors report that TF–IDuF was equally effective as tf–idf but could also be applied in situations when, e.g., a user

modeling system has no access to a global document corpus.

See also [edit]

Word embedding

Kullback–Leibler divergence

Latent Dirichlet allocation

Latent semantic analysis

Mutual information

Noun phrase


Privacy policy About Wikipedia Disclaimers

Contact Wikipedia Mobile view Developers

Statistics

Cookie statement





This page was last edited on 6 March 2023, at 07:26 (UTC).

Text is available under the Creative Commons Attribution-ShareAlike License 3.0; additional terms may apply. By using this site, you agree to the Terms of Use and Privacy Policy. Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc., a

non-profit organization.

Okapi BM25

PageRank

Vector space model

Word count

SMART Information Retrieval System

References [edit]

1. ^ Rajaraman, A.; Ullman, J.D. (2011). 



"Data Mining"

 (PDF). Mining of Massive Datasets. pp. 1–17. doi:10.1017/CBO9781139058452.002 . ISBN 978-1-139-05845-2.

2. ^ Breitinger, Corinna; Gipp, Bela; Langer, Stefan (2015-07-26). "Research-paper recommender systems: a literature survey" . International Journal on Digital Libraries. 17 (4): 305–338. doi:10.1007/s00799-015-0156-0 . ISSN 1432-

5012 . S2CID 207035184 .

3. ^ Luhn, Hans Peter (1957). 



"A Statistical Approach to Mechanized Encoding and Searching of Literary Information"

 (PDF). IBM Journal of Research and Development. 1 (4): 309–317. doi:10.1147/rd.14.0309 . Retrieved 2 March

2015. "There is also the probability that the more frequently a notion and combination of notions occur, the more importance the author attaches to them as reflecting the essence of his overall idea."

4. ^ Spärck Jones, K. (1972). "A Statistical Interpretation of Term Specificity and Its Application in Retrieval". Journal of Documentation. 28 (1): 11–21. CiteSeerX 10.1.1.115.8343 . doi:10.1108/eb026526 . S2CID 2996187 .

5. ^ Speech and Language Processing (3rd ed. draft), Dan Jurafsky and James H. Martin, chapter 14.



https://web.stanford.edu/~jurafsky/slp3/14.pdf

6. ^ Manning, C.D.; Raghavan, P.; Schutze, H. (2008). 



"Scoring, term weighting, and the vector space model"

 (PDF). Introduction to Information Retrieval. p. 100. doi:10.1017/CBO9780511809071.007 . ISBN 978-0-511-80907-1.

7. ^ "TFIDF statistics | SAX-VSM" .

8. ^ a b c Robertson, S. (2004). "Understanding inverse document frequency: On theoretical arguments for IDF". Journal of Documentation. 60 (5): 503–520. doi:10.1108/00220410410560582 .

9. ^ See also Probability estimates in practice  in Introduction to Information Retrieval.

10. ^ a b Aizawa, Akiko (2003). "An information-theoretic perspective of tf–idf measures". Information Processing and Management. 39 (1): 45–65. doi:10.1016/S0306-4573(02)00021-3 .

11. ^ Bollacker, Kurt D.; Lawrence, Steve; Giles, C. Lee (1998-01-01). CiteSeer: An Autonomous Web Agent for Automatic Retrieval and Identification of Interesting Publications . Proceedings of the Second International Conference on

Autonomous Agents. AGENTS '98. pp. 116–123. doi:10.1145/280765.280786 . ISBN 978-0-89791-983-8. S2CID 3526393 .

12. ^ Sivic, Josef; Zisserman, Andrew (2003-01-01). Video Google: A Text Retrieval Approach to Object Matching in Videos . Proceedings of the Ninth IEEE International Conference on Computer Vision – Volume 2. ICCV '03.

pp. 1470–. doi:10.1109/ICCV.2003.1238663 . ISBN 978-0-7695-1950-0. S2CID 14457153 .

13. ^ Seki, Yohei. 



"Sentence Extraction by tf/idf and Position Weighting from Newspaper Articles"

 (PDF). National Institute of Informatics.

14. ^ Beel, Joeran; Breitinger, Corinna (2017). 



"Evaluating the CC-IDF citation-weighting scheme – How effectively can 'Inverse Document Frequency' (IDF) be applied to references?"

 (PDF). Proceedings of the 12th IConference.

15. ^ Khoo Khyou Bun; Bun, Khoo Khyou; Ishizuka, M. (2001). Emerging Topic Tracking System. Proceedings Third International Workshop on Advanced Issues of E-Commerce and Web-Based Information Systems. WECWIS 2001.

p. 2. CiteSeerX 10.1.1.16.7986 . doi:10.1109/wecwis.2001.933900 . ISBN 978-0-7695-1224-2. S2CID 1049263 .

^ Langer, Stefan; Gipp, Bela (2017). "TF-IDuF: A Novel Term-Weighting Scheme for User Modeling based on Users' Personal Document Collections"

 (PDF). IConference.

Salton, G; McGill, M. J. (1986). Introduction to modern information retrieval

. McGraw-Hill. ISBN 978-0-07-054484-0.

Salton, G.; Fox, E. A.; Wu, H. (1983). "Extended Boolean information retrieval". Communications of the ACM. 26 (11): 1022–1036. doi:10.1145/182.358466

. hdl:1813/6351

. S2CID 207180535

.

Salton, G.; Buckley, C. (1988). 



"Term-weighting approaches in automatic text retrieval"

 (PDF). Information Processing &amp; Management. 24 (5): 513–523. doi:10.1016/0306-4573(88)90021-0

. hdl:1813/6721

.

S2CID 7725217

.

Wu, H. C.; Luk, R.W.P.; Wong, K.F.; Kwok, K.L. (2008). "Interpreting TF-IDF term weights as making relevance decisions"

. ACM Transactions on Information Systems. 26 (3): 1. doi:10.1145/1361684.1361686

.

hdl:10397/10130

. S2CID 18303048

.

External links and suggested reading [edit]

Gensim is a Python library for vector space modeling and includes tf–idf weighting.

Anatomy of a search engine

tf–idf and related definitions

 as used in Lucene

TfidfTransformer

 in scikit-learn

Text to Matrix Generator (TMG)

 MATLAB toolbox that can be used for various tasks in text mining (TM) specifically i) indexing, ii) retrieval, iii) dimensionality reduction, iv) clustering, v) classification. The indexing step

offers the user the ability to apply local and global weighting methods, including tf–idf.

Term-frequency explained

 Explanation of term-frequency

Categories: Statistical natural language processing

Ranking functions

Vector space model



