


Ranking with Large Margin Principle: Two

Approaches

�



Amnon Shashua

School of CS&amp;E

Hebrew University of Jerusalem

Jerusalem 91904, Israel

email: shashua@cs.huji.ac.il

Anat Levin

School of CS&amp;E

Hebrew University of Jerusalem

Jerusalem 91904, Israel

email: alevin@cs.huji.ac.il

Abstract

We discuss the problem of ranking

k instances with the use of a “large

margin” principle. We introduce two main approaches: the ﬁrst is the

“ﬁxed margin” policy in which the margin of the closest neighboring

classes is being maximized — which turns out to be a direct generaliza-

tion of SVM to ranking learning. The second approach allows for

k

�



different margins where the sum of margins is maximized. This approach

is shown to reduce to

�-SVM when the number of classes

k

�

. Both

approaches are optimal in size of

l where

l is the total number of training

examples. Experiments performed on visual classiﬁcation and “collab-

orative ﬁltering” show that both approaches outperform existing ordinal

regression algorithms applied for ranking and multi-class SVM applied

to general multi-class classiﬁcation.

1

Introduction

In this paper we investigate the problem of inductive learning from the point of view of

predicting variables of ordinal scale [3, 7, 5], a setting referred to as ranking learning or

ordinal regression. We consider the problem of applying the large margin principle used

in Support Vector methods [12, 1] to the ordinal regression problem while maintaining an

(optimal) problem size linear in the number of training examples.

Let

x

j

i be the set of training examples where

j

�

�

����

k denotes the class number, and

i

�

�

����

i

j is the index within each class. Let

l

�

P

j

i

j be the total number of training

examples. A straight-forward generalization of the 2-class separating hyperplane problem,

where a single hyperplane determines the classiﬁcation rule, is to deﬁne

k

�

 separating

hyperplanes which would separate the training data into

k ordered classes by modeling the

ranks as intervals on the real line — an idea whose origins are with the classical cumulative

model [9], see also [7, 5]. The geometric interpretation of this approach is to look for

k

�



parallel hyperplanes represented by vector

w



R

n (the dimension of the input vectors)

and scalars

b



�

���

�

b

k

� deﬁning the hyperplanes

�w

�

b



��

����

�w

�

b

k

�

�, such that the



�This work was done while A.S. was spending his sabbatical at the computer science department

of Stanford University.


)

,

(

1b

w

)

,

(

2b

w

maximize the margin

|

|

2

w

)

,

(

1a

w

)

,

(

1b

w

)

,

(

2

a

w

)

,

(

2b

w

|

|

1

1

w

a

b −

|

|

2

2

w

a

b −

Fixed-margin

Sum-of-margins

Figure 1: Lefthand display: ﬁxed-margin policy for ranking learning. The margin to be maximized

is associated with the two closest neighboring classes. As in conventional SVM, the margin is pre-

scaled to be equal to

�jw

j thus maximizing the margin is achieved by minimizing

w

�

w. The support

vectors lie on the boundaries between the two closest classes. Righthand display: sum-of-margins

policy for ranking learning. The objective is to maximize the sum of

k

�

 margins. Each class is

sandwiched between two hyperplanes, the norm of

w is set to unity as a constraint in the optimization

problem and as a result the objective is to maximize

P

j

�b

j

�

a

j

�. In this case, the support vectors lie

on the boundaries among all neighboring classes (unlike the ﬁxed-margin policy). When the number

of classes

k

�

, the dual functional is equivalent to

�-SVM.

data are separated by dividing the space into equally ranked regions by the decision rule

f

�x�

�

min

r

f�����k

g

fr

�

w

�

x

�

b

r

�

�g�

(1)

In other words, all input vectors

x satisfying

b

r

�

�

w

�

x

�

b

r are assigned the rank

r (using the convention that

b

k

�

). For instance, recently [5] proposed an “on-line”

algorithm (with similar principles to the classic “perceptron” used for 2-class separation)

for ﬁnding the set of parallel hyperplanes which would comply with the separation rule

above.

To continue the analogy to 2-class learning, in addition to the separability constraints on

the variables

�

�

fw

�

b



�

���

�

b

k

�

g one would like to control the tradeoff between

lowering the “empirical risk”

R

emp

��� (error measure on the training set) and lowering

the “conﬁdence interval”

����

h� controlled by the VC-dimension

h of the set of loss

functions. The “structural risk minimization” (SRM) principle [12] minimizes a bound

on the risk over a structure on the set of functions. The geometric interpretation for 2-class

learning is to maximize the margin between the boundaries of the two sets [12, 1].

In our setting of ranking learning, there are

k

�

 margins to consider, thus there are two

possible approaches to take on the “large margin” principle for ranking learning:

“ﬁxed margin” strategy:



the margin to be maximized is the one deﬁned by the closest

(neighboring) pair of classes. Formally, let

w

�

b

q be the hyperplane separating the two

pairs of classes which are the closest among all the neighboring pairs of classes. Let

w

�

b

q

be scaled such the distance of the boundary points from the hyperplane is 1, i.e., the margin

between the classes

q

�

q

�

 is

�jw

j (see Fig. 1, lefthand display). Thus, the ﬁxed margin

policy for ranking learning is to ﬁnd the direction

w and the scalars

b



�

����

b

k

� such that

w

�

w is minimized (i.e., the margin between classes

q

�

q

�

 is maximized) subject to the

separability constraints (modulo margin errors in the non-separable case).

“sum of margins” strategy:



the sum of all

k

�

 margins are to be maximized. In this case,

the margins are not necessarily equal (see Fig. 1, righthand display). Formally, the ranking


rule employs a vector

w,

jw

j

�

, and a set of

�k

�

� thresholds

a



�

b



�

a



�

b



�

���

�

a

k

�

�

b

k

� such that

w

�

x

j

i

�

a

j and

w

�

x

j

�

i

�

b

j for

j

�

�

����

k

�

. In

other words, all the examples of class



�

j

�

k are “sandwiched” between two parallel

hyperplanes

�w

�

a

j

� and

�w

�

b

j

�

�, where

b

�

�

� and

a

k

�

. The

k

�

 margins are

therefore

�b

j

�

a

j

� and the large margin principle is to maximize

P

j

�b

j

�

a

j

� subject to

the separability constraints above.

It is also fairly straightforward to apply the SRM principle and derive the bounds on the

actual risk functional — see [11] for details.

In the remainder of this paper we will introduce the algorithmic implications of these two

strategies for implementing the large margin principle for ranking learning. The ﬁxed-

margin principle will turn out to be a direct generalization of the Support Vector Machine

(SVM) algorithm — in the sense that substituting

k

�

 in our proposed algorithm would

produce the dual functional underlying conventional SVM. It is interesting to note that the

sum-of-margins principle reduces to

�-SVM (introduced by [10] and later [2]) when

k

�

.

2

Fixed Margin Strategy

Recall that in the ﬁxed margin policy

�w

�

b

q

� is a “canonical” hyperplane normalized such

that the margin between the closest classes

q

�

q

�

 is

�kw

k. The index

q is of course

unknown. The unknown variables

w

�

b



�

���

�

b

k

� (and the index

q) could be solved

in a two-stage optimization problem: a Quadratic Linear Programming (QLP) formulation

followed by a Linear Programming (LP) formulation.

The (primal) QLP formulation of the (“soft margin”) ﬁxed-margin policy for ranking learn-

ing takes the form:

min

w

�b

j

��

j

i

��

�j

�

i







w

�

w

�

C

X

i

X

j

�

�

j

i

�

�

�j

�

i

�

(2)

subj

ect

to

w

�

x

j

i

�

b

j

�

�

�

�

j

i

�

(3)

w

�

x

j

�

i

�

b

j

�



�

�

�j

�

i

�

(4)

�

j

i

�

��

�

�j

i

�

�

(5)

where

j

�

�

����

k

�

 and

i

�

�

����

i

j, and

C is some predeﬁned constant. The scalars

�

j

i

and

�

�j

�

i

are positive for data points which are inside the margins or placed on the wrong

side of the respective hyperplane. Since the margin is maximized while maintaining sepa-

rability, it will be governed by the closest pair of classes because otherwise the separability

conditions would cease to hold (modulo the choice of the constant

C which would tradeoff

the margin size with possible margin errors — but that is discussed later).

The solution to this optimization problem is given by the saddle point of the Lagrange

functional (Lagrangian):

L���

�







w

�

w

�

C

X

i�j

�

�

j

i

�

�

�j

�

i

�

�

X

i�j

�

j

i

�w

�

x

j

i

�

b

j

�



�

�

j

i

�

�

X

i�j

�

j

i

�

�

�

�j

�

i

�

b

j

�

w

�

x

j

�

i

�

�

X

i�j

�

j

i

�

j

i

�

X

i�j

�

�j

�

i

�

�j

�

i

where

j

�

�

����

k

�

,i

�

�

����

i

j, and

�

j

i

�

�

�j

�

i

�

�

j

i

�

�

j

i are all non-negative Lagrange

multipliers. Since the primal problem is convex, there exists a strong duality between the

primal and dual optimization functions. By ﬁrst minimizing the Lagrangian with respect


to

w

�

b

j

�

�

j

i

�

�

�j

�

i

we obtain the dual optimization function which then must be maximized

with respect to the Lagrange multipliers. From the minimization of the Lagrangian with

respect to

w we obtain:

w

�

�

X

i�j

�

j

i

x

j

i

�

X

i�j

�

j

i

x

j

�

i

(6)

That is, the direction

w of the parallel hyperplanes is described by a linear combination

of the support vectors

x associated with the non-vanishing Lagrange multipliers. From the

Kuhn-Tucker theorem the support vectors are those vectors for which equality is achieved

in the inequalities (3,4). These vectors lie on the two boundaries between the adjacent

classes

q

�

q

�

 (and other adjacent classes which have the same margin). From the mini-

mization of the Lagrangian with respect to

b

j we obtain the constraint:

X

i

�

j

i

�

X

i

�

j

i

j

�

�

����

k

�



(7)

and the minimization with respect to

�

j

i and

�

�j

�

i

yields the constraints:

C

�

�

j

i

�

�

j

i

�

��

C

�

�

j

i

�

�

�j

�

i

�

�

(8)

which in turn gives rise to the constraints

�

�

�

j

i

�

C where

�

j

i

�

C if the corresponding

data point is a margin error (�

j

i

�

�, thus from the Kuhn-Tucker theorem

�

j

i

�

�), and

likewise for

�

j

i . Note that a data point can count twice as a margin error — once with

respect to the class on its “left” and once with respect to the class on its “right”.

For the sake of presenting the dual functional in a compact form, we will introduce some

new notations.

Let

X

j be the

n

�

i

j matrix whose columns are the data points

x

j

i,

i

�

�

����

i

j. Let

�

j

�

��

j



�

����

�

j

i

j

�

� be the vector whose components are the Lagrange

multipliers

�

j

i corresponding to class

j. Likewise, let

�

j

�

��

j



�

����

�

j

i

j

�

� be the Lagrange

multipliers

�

j

i corresponding to class

j

�

. Let

�

�

��



�

����

�

k

�

�

�



�

����

�

k

�

�

� be the

vector holding all the

�

j

i and

�

j

i Lagrange multipliers, and let

�



�

��





�

����

�



k

�

�

�

�

��



�

����

�

k

�

�

� and

�



�

��





�

����

�



k

�

�

�

�

��



�

����

�

k

�

�

� the ﬁrst and second halves of

�. Note that

�



j

�

�

j is a vector, and likewise so is

�



j

�

�

j. Let

 be the vector of 1’s, and

ﬁnally, let

Q be the matrix holding two copies of the training data:

Q

�

�

�X



�

����

�X

k

�

�

X



�

����

X

k

�

n�N

�

(9)

where

N

�

l

�

i



�

i

k. For example, (6) becomes in the new notations

w

�

Q�.

By substituting the expression for

w

�

Q� back into the Lagrangian and taking into

account the constraints (7,8) one obtains the dual functional which should be maximized

with respect to the Lagrange multipliers

�

i:

max

�

N

X

i�

�

i

�

�

�

�Q

�

Q��

(10)

subj

ect

to

�

�

�

i

�

C

i

�

�

����

N

(11)



�

�



j

�



�

�



j

j

�

�

����

k

�



(12)

Note that

k

�

, i.e., we have only two classes thus the ranking learning problem is equiv-

alent to the 2-class classiﬁcation problem, the dual functional reduces and becomes equiv-

alent to the dual form of conventional SVM. In that case

�Q

�

Q�

ij

�

y

i

y

j

x

i

�

x

j where

y

i

�

y

j

�

� denoting the class membership.


Also worth noting is that since the dual functional is a function of the Lagrange multipliers

�

j

i and

�

j

i alone, the problem size (the number of unknown variables) is equal to twice the

number of training examples — precisely

N

�

l

�

i



�

i

k where

l is the number of training

examples. This favorably compares to the

O

�l



� required by the recent SVM approach to

ordinal regression introduced in [7] or the

k

l required by the general multi-class approach

to SVM [4, 8].

Further note that since the entries of

Q

�

Q are the inner-products of the training examples,

they can be represented by the kernel inner-product in the input space dimension rather than

by inner-products in the feature space dimension. The decision rule, in this case, given a

new instance vector

x would be the rank

r corresponding to the ﬁrst smallest threshold

b

r

for which

X

suppor

t

v

ector

s

�

j

i

K

�x

j

�

i

�

x�

�

X

suppor

t

v

ector

s

�

j

i

K

�x

j

i

�

x�

�

b

r

�

where

K

�x�

y

�

�

��x�

�

��y

� replaces the inner-products in the higher-dimensional “fea-

ture” space

��x�.

Finally, from the dual form one can solve for the Lagrange multipliers

�

i and in turn obtain

w

�

Q� the direction of the parallel hyperplanes. The scalar

b

q (separating the adjacent

classes

q

�

q

�

 which are the closest apart) can be obtained from the support vectors, but

the remaining scalars

b

j cannot. Therefore an additional stage is required which amounts

to a Linear Programming problem on the original primal functional (2) but this time

w is

already known (thus making this a linear problem instead of a quadratic one).

3

Sum-of-Margins Strategy

In this section we propose an alternative large-margin policy which allows for

k

�

 mar-

gins where the criteria function maximizes the sum of them. The challenge in formulating

the appropriate optimization functional is that one cannot adopt the “pre-scaling” of

w ap-

proach which is at the center of conventional SVM formulation and of the ﬁxed-margin

policy for ranking learning described in the previous section.

The approach we take is to represent the primal functional using

�k

�

� parallel hy-

perplanes instead of

k

�

. Each class would be “sandwiched” between two hyperplanes

(except the ﬁrst and last classes). Formally, we seek a ranking rule which employs a vector

w and a set of

�k

�

� thresholds

a



�

b



�

a



�

b



�

���

�

a

k

�

�

b

k

� such

that

w

�

x

j

i

�

a

j and

w

�

x

j

�

i

�

b

j for

j

�

�

����

k

�

. In other words, all the exam-

ples of class



�

j

�

k are “sandwiched” between two parallel hyperplanes

�w

�

a

j

� and

�w

�

b

j

�

�, where

b

�

�

� and

a

k

�

.

The margin between two hyperplanes separating class

j and

j

�

 is:

�b

j

�

a

j

��

p



kw

k

�

Thus, by setting the magnitude of

w to be of unit length (as a constraint in the optimization

problem), the margin which we would like to maximize is

P

j

�b

j

�

a

j

� for

j

�

�

����

k

�



which we can formulate in the following primal QLP (see also Fig. 1, righthand display):

min

w

�a

j

�b

j

k

�

X

j

�

�a

j

�

b

j

�

�

C

X

i

X

j

�

�

j

i

�

�

�j

�

i

�

(13)

subj

ect

to

a

j

�

b

j

�

(14)

b

j

�

a

j

�

�

j

�

�

����

k

�



(15)

w

�

x

j

i

�

a

j

�

�

j

i

�

b

j

�

�

�j

�

i

�

w

�

x

j

�

i

�

(16)

w

�

w

�

�

�

j

i

�

��

�

�j

�

i

�

�

(17)


where

j

�

�

����

k

�

 (unless otherwise speciﬁed) and

i

�

�

����

i

j, and

C is some prede-

ﬁned constant (whose physical role would be explained later). Note that the (non-convex)

constraint

w

�

w

�

 is replaced by the convex constraint

w

�

w

�

 since it can be shown

that the optimal solution

w

� would have unit magnitude in order to optimize the objective

function (see [11] for details). We will proceed to derive the dual functional below.

The Lagrangian takes the following form:

L���

�

X

j

�a

j

�

b

j

�

�

C

X

i�j

�

�

j

i

�

�

�j

�

i

�

�

X

j

�

j

�a

j

�

b

j

�

�

k

�

X

j

�

�

j

�b

j

�

a

j

�

�

�

X

i�j

�

j

i

�w

�

x

j

i

�

a

j

�

�

j

i

�

�

X

i�j

�

j

i

�b

j

�

�

�j

�

i

�

w

�

x

j

�

i

�

�

��w

�

w

�

�

�

X

i�j

�

j

i

�

j

i

�

X

i�j

�

�j

�

i

�

�j

i

where

j

�

�

����

k

�



(unless otherwise

speciﬁed),

i

�

�

����

i

j,

and

�

j

�

�

j

�

��

�

j

i

�

�

�j

i

�

�

j

i

�

�

j

i are all non-negative Lagrange multipliers. Due to lack of space

we will omit further derivations (those can be found in [11]) and move directly to the dual

functional which takes the following form:

max

�

��

�

�Q

�

Q��

(18)

subj

ect

to

�

�

�

i

�

C

i

�

�

����

N

(19)



�

�





�

�



�

�



k

�

�



(20)



�

�



�



�

�



(21)

where

Q and

� are deﬁned in the previous section. The direction

w is represented by the

linear combination of the support vectors:

w

�

Q��kQ�k where, following the Kuhn-

Tucker theorem,

�

i

�

� for all vectors on the boundaries between the adjacent pairs of

classes and margin errors. In other words, the vectors

x associated with non-vanishing

�

i

are those which lie on the hyperplanes or vectors tagged as margin errors. Therefore, all

the thresholds

a

j

�

b

j can be recovered from the support vectors — unlike the ﬁxed-margin

scheme which required another LP pass.

The dual functional (18) is similar to the dual functional (10) but with some crucial differ-

ences: (i) the quadratic criteria functional is homogeneous, and (ii) constraints (20) lead

to the constraint

P

i

�

i

�

. These two differences are also what distinguishes between

conventional SVM and

�-SVM for 2-class learning proposed recently by [10]. Indeed, if

we set

k

�

 in the dual functional (18) we would be able to conclude that the two dual

functionals are identical (by a suitable change of variables). Therefore, the role of the con-

stant

C complies with the ﬁndings of [10] by controlling the tradeoff between the number

of margin errors and support vectors and the size of the margins:

�

N

�

C

�

 such that

when

C

�

 a single margin error is allowed (otherwise a duality gap would occur) and

when

C

�

�

N all vectors are allowed to become margin errors and support vectors (see

[11] for a detailed discussion on this point).

In the general case of

k

�

 classes (in the context of ranking learning) the role of the

constant

C carries the same meaning:

C

�

�k

�

���m�e� where

�m�e� stand for “total

number of margin errors”, thus

�k

�

�



N

�

C

�

�k

�

��

Since a data point can can count twice for a margin error, the total number of margin errors

in the worst case is

N

�

l

�

i



�

i

k where

l is the total number of data points.




Crammer &amp; Singer 2001

fixed-margin

Figure 2: The results of the ﬁxed-margin principle plotted against the results of PRank of [5] which

does not use a large-margin principle. The average error of PRank is about 1.25 compared to 0.7 with

the ﬁxed-margin algorithm.

4

Experiments

Due to lack of space we describe only two sets of experiments we conducted on a “collabo-

rative ﬁltering” problem and visual data ranking. More details and further experiments are

reported in [11].

In general, the goal in collaborative ﬁltering is to predict a person’s rating on new items

such as movies given the person’s past ratings on similar items and the ratings of other

people of all the items (including the new item). The ratings are ordered, such as “highly

recommended”, “good”,..., “very bad” thus collaborative ﬁltering falls naturally under the

domain of ordinal regression (rather than general multi-class learning).

The “EachMovie” dataset [6] contains 1628 movies rated by 72,916 people arranged as a

2D array whose columns represent the movies and the rows represent the users — about

5% of the entries of this array are ﬁlled-in with ratings between

��

����

 totaling 2,811,983

ratings. Given a new user, the ratings of the user on the 1628 movies (not all movies would

be rated) form the

y

i and the i’th column of the array forms the

x

i which together form the

training data (for that particular user). Given a new movie represented by the vector

x of

ratings of all the other 72,916 users (not all the users rated the new movie), the learning

task is to predict the rating

f

�x� of the new user. Since the array contains empty entries, the

ratings were shifted by

�� to have the possible ratings

f���

���

����

���

��

�

g

which allows to assign the value of zero to the empty entries of the array (movies which

were not rated).

For the training phase we chose users which ranked about 450 movies and selected a subset

f��

���

����

��g of those movies for training and tested the prediction on the remaining

movies. We compared our results (collected over 100 runs) — the average distance be-

tween the correct rating and the predicted rating — to the best “on-line” algorithm of [5]

called “PRank” (there is no use of large margin principle). In their work, PRank was com-

pared to other known on-line approaches and was found to be superior, thus we limited our

comparison to PRank alone. Attempts to compare our algorithms to other known ranking

algorithms which use a large-margin principle ([7], for example) were not successful since

those square the training set size which made the experiment with the Eachmovie dataset

untractable computationally.

The graph in Fig. 2 shows that the large margin principle makes a signiﬁcant difference on

the results compared to PRank. The results we obtained with PRank are consistent with

the reported results of [5] (best average error of about 1.25), whereas our ﬁxed-margin

algorithm provided an average error of about 0.7).

We have applied our algorithms to classiﬁcation of “vehicle type” to one of three classes:

“small” (passenger cars), “medium” (SUVs, minivans) and “large” (buses, trucks). There




















11

22

33

Correctly Classified

Badly Classified

























Figure 3: Classiﬁcation of vehicle type: Small, Medium and Large (see text for details).

is a natural order Small, Medium, Large since making a mistake between Small and Large

is worse than confusing Small and Medium, for example. We compared the classiﬁcation

error (counting the number of miss-classiﬁcations) to general multi-class learning using

pair-wise SVM. The error over a test set of about 14,000 pictures was 20% compared to

25% when using general multi-class SVM. We also compared the error (averaging the

difference between the true rank

f�

�

g and the predicted rank using 2nd-order kernel) to

PRank. The average error was 0.216 compared to 1.408 with PRank. Fig. 3 shows a typical

collection of correctly classiﬁed and incorrectly classiﬁed pictures from the test set.

References

[1] B.E. Boser, I.M. Guyon, and V.N. Vapnik. A training algorithm for optimal margin classifers.

In Proc. of the 5th ACM Workshop on Computational Learning Theory, pages 144–152. ACM

Press, 1992.

[2] C.C. Chang and C.J. Lin. Training

�–Support Vector classiﬁers: Theory and Algorithms. In

Neural Computations, 14(8), 2002.

[3] W.W. Cohen, R.E. Schapire, and Y. Singer. Learning to order things. Journal of Artiﬁcial

Intelligence Research (JAIR), 10:243–270, 1999.

[4] K. Crammer and Y. Singer.

On the algorithmic implementation of multiclass kernel-based

vector machines. Journal of Machine Learning Research, 2:265–292, 2001.

[5] K. Crammer and Y. Singer. Pranking with ranking. In Proceedings of the conference on Neural

Information Processing Systems (NIPS), 2001.

[6] http://www.research.compaq.com/SRC/eachmovie/.

[7] R. Herbrich, T. Graepel, and K. Obermayer. Large margin rank boundaries for ordinal regres-

sion. Advances in Large Margin Classiﬁers, 2000. pp. 115–132.

[8] Y. Lee, Y. Lin, and G. Wahba. Multicategory support vector machines. Technical Report 1043,

Univ. of Wisconsin, Dept. of Statistics, Sep. 2001.

[9] P. McCullagh and J. A. Nelder. Generalized Linear Models. Chapman and Hall, London, 2nd

edition edition, 1989.

[10] B. Scholkopf, A. Smola, R.C. Williamson, and P.L. Bartless. New support vector algorithms.

Neural Computation, 12:1207–1245, 2000.

[11] A. Shashua and A. Levin. Taxonomy of Large Margin Principle Algorithms for Ordinal Regres-

sion Problems. Technical Report 2002-39, Leibniz Center for Research, School of Computer

Science and Eng., the Hebrew University of Jerusalem.

[12] V.N. Vapnik. The nature of statistical learning. Springer, 2nd edition, 1998.

[13] J. Weston and C. Watkins. Support vector machines for multi-class pattern recognition. In Proc.

of the 7th European Symposium on Artiﬁcial Neural Networks, April 1999.

