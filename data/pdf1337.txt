
Published in

CodeX



Apr 4, 2022

·

7 min read

Statistical Language Model: N-gram to calculate the

Probability of word sequence using Python.

A comprehensive guide for stepwise implementation of N-gram.

N-gram

Table of Contents

What is Language Model (LM)?





T


Language modeling is the art of determining the probability of a

sequence of words. This is useful in a large variety of areas including

speech recognition, optical character recognition, handwriting

recognition, machine translation, and spelling correction

— A Bit of Progress in Language Modeling, 2001

What is Statistical Language Modeling (SLM)?

What is N-gram?

Unigram

Bigram

Trigram


 Markov

assumption.

maximum likelihood estimation

MLE

Implementation of N-gram in Python

Step 1: Data Corpus

Step 2: Preprocessing


Step 3: Tokenization

Step 4: Calculate the frequency of tokens


Step 5: Generate n-grams

Step 6: Calculate the frequency of n-gram


Step 7: Probability table / Bigram Table


Step 8: Input text to check the probability

Step 9: Repeat steps 2- 6 for a given text

Step 10: Calculate bigram probability


Step 11: Calculate the probability of a word sequence

chain rule of probability.

P(“I do not like green eggs and ham”)

0.1665






Invitation to collaborate on Replit

LinkedIn 

If you liked this article, here are some articles you may enjoy:

Error-free installation of Owncloud Server on Windows 10 within 30 minutes using W SL!




3

Everything connected with Tech &amp; Code. Follow to join our 1M+ monthly readers



Read more from CodeX





Ngrams

Language Model

Natural Language Process

Machine Learning

Artificial Intelligence

