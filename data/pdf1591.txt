
pip install rank-bm25

pip install rank-bm25

�  Project description

�  Project details

�  Release history

�  Download files

Project description

Project description

Rank-BM25: A two line search engine

Rank-BM25: A two line search engine



pytest

pytest



passing

passing  



 



DOI

DOI

10.5281/zenodo.6106156

10.5281/zenodo.6106156

A collection of algorithms for querying a set of documents and returning the ones most relevant to the query. The most common use case for

these algorithms is, as you might have guessed, to create search engines.

So far the algorithms that have been implemented are:

 Okapi BM25

 BM25L

 BM25+

 BM25-Adpt

 BM25T

These algorithms were taken from this paper, which gives a nice overview of each method, and also benchmarks them against each other. A

nice inclusion is that they compare different kinds of preprocessing like stemming vs no-stemming, stopword removal or not, etc. Great read

if you're new to the topic.

Installation

Installation

The easiest way to install this package is through pip

pip , using

rank-bm25 0.2.2

rank-bm25 0.2.2

✓

✓

 Latest version

Released: Feb 16, 2022

Various BM25 algorithms for document ranking

Menu �



Search projects

�

�


pip install rank_bm25

pip install rank_bm25

If you want to be sure you're getting the newest version, you can install it directly from github with

pip install git+ssh://git@github.com/dorianbrown/rank_bm25.git

pip install git+ssh://git@github.com/dorianbrown/rank_bm25.git

Usage

Usage

For this example we'll be using the BM25Okapi

BM25Okapi  algorithm, but the others are used in pretty much the same way.

Initalizing

Initalizing

First thing to do is create an instance of the BM25 class, which reads in a corpus of text and does some indexing on it:

from

from rank_bm25

rank_bm25 import

import  BM25Okapi

BM25Okapi

corpus

corpus  ==  [[

 

 "Hello there good man!"

"Hello there good man!",,

 

 "It is quite windy in London"

"It is quite windy in London",,

 

 "How is the weather today?"

"How is the weather today?"

]]

tokenized_corpus

tokenized_corpus  ==  [[doc

doc..split

split((" "

" "))  for

for  doc

doc  in

in  corpus

corpus]]

bm25

bm25  ==  BM25Okapi

BM25Okapi((tokenized_corpus

tokenized_corpus))

# &lt;rank_bm25.BM25Okapi at 0x1047881d0&gt;

# &lt;rank_bm25.BM25Okapi at 0x1047881d0&gt;

Note that this package doesn't do any text preprocessing. If you want to do things like lowercasing, stopword removal, stemming, etc, you

need to do it yourself.

The only requirements is that the class receives a list of lists of strings, which are the document tokens.

Ranking of documents

Ranking of documents

Now that we've created our document indexes, we can give it queries and see which documents are the most relevant:

query

query  ==  "windy London"

"windy London"

tokenized_query

tokenized_query  ==  query

query..split

split((" "

" "))

doc_scores

doc_scores  ==  bm25

bm25..get_scores

get_scores((tokenized_query

tokenized_query))

# array([0.        , 0.93729472, 0.        ])

# array([0.        , 0.93729472, 0.        ])

Good to note that we also need to tokenize our query, and apply the same preprocessing steps we did to the documents in order to have an

apples-to-apples comparison

Instead of getting the document scores, you can also just retrieve the best documents with

bm25

bm25..get_top_n

get_top_n((tokenized_query

tokenized_query,,  corpus

corpus,,  nn==11))

# ['It is quite windy in London']

# ['It is quite windy in London']

And that's pretty much it!










Project details

Project details

Project links

Project links



 Homepage

Statistics

Statistics

View statistics for this project via Libraries.io, or by using our public dataset on Google BigQuery

Meta

Meta

License:

License: Apache2.0

Author:

Author: D. Brown

Maintainers

Maintainers



 dorianbrown

Release history

Release history

 Release notifications | RSS feed �

0.2.2

0.2.2

Feb 16, 2022

0.2.1

0.2.1

Jun 4, 2020

0.2

0.2

Apr 10, 2019

0.1

0.1

Jan 24, 2019

Download files

Download files

Download the file for your platform. If you're not sure which to choose, learn more about installing packages.

Source Distribution

Source Distribution

rank_bm25-0.2.2.tar.gz (8.3 kB view hashes)

Uploaded Feb 16, 2022 source

source

✉


Built Distribution

Built Distribution

rank_bm25-0.2.2-py3-none-any.whl (8.6 kB view hashes)

Uploaded Feb 16, 2022 py3

py3

Help

Help

Installing packages

Uploading packages

User guide

Project name retention

FAQs

About PyPI

About PyPI

PyPI on Twitter

Infrastructure dashboard

Statistics

Logos &amp; trademarks

Our sponsors

Contributing to PyPI

Contributing to PyPI

Bugs and feedback

Contribute on GitHub

Translate PyPI

Sponsor PyPI

Development credits

Using PyPI

Using PyPI

Code of conduct

Report security issue

Privacy policy

Terms of use

Acceptable Use Policy

Status: all systems operational

Developed and maintained by the Python community, for the Python community. 

Donate today!

"PyPI", "Python Package Index", and the blocks logos are registered trademarks of the

Python Software Foundation. 

© 2023 Python Software Foundation

Site map

 English  español  français  ���  português (Brasil)  українська Ελληνικά  Deutsch  �� (��)  �� (��)  русский עברית esperanto

Supported by

 

 

 

 

 

 

 

››

















